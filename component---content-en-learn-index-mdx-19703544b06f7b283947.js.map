{"version":3,"sources":["webpack:///./content/en/learn/index.mdx","webpack:///./src/modules/layouts/mdx_layout.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","children","pageContext","uri","frontmatter","title","description","keywords","featuredImage","status","hideLanguageSelector","hideSidenav","hideBreadcrumbs","statusProps","text","currentTopSection","useLocation","pathname","split","hasTopSection","undefined","renderSidenav","seo","firstHeading","Children","toArray","find","c","getFirstHeading","pop","boundaryElement","sx","width","minWidth","display","dontUpdateHolderHeightWhenSticky","style","position","hideOnBoundaryHit","flexGrow","flexDirection","pl","mt","pb","pr","marginTop","sticky","justifyContent","alignItems","flexWrap","px","lineHeight","maxWidth","mb"],"mappings":"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","file":"component---content-en-learn-index-mdx-19703544b06f7b283947.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/cryptowander/Maker/test/src/modules/layouts/mdx_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Learn how to govern better money yourself`}</h1>\n    <h2>{`Understand Our Process`}</h2>\n    <p>{`The complete decentralization of the DAO depends on a self-sustaining system in which the community governs all processes and frameworks. From choosing new collateral types, to electing paid contributors - including risk, governance, integration, accounting, and marketing teams - MKR holders are the final decision-makers.`}</p>\n    <p>{`Such decisions are arrived at through MakerDAO Improvement Proposals, which are the preferred mechanism for improving both Maker Governance and the Maker Protocol. Through an open and documented process, community feedback is collected to reach the broadest possible consensus on how the Maker Protocol should evolve.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`MIPs provide a `}<strong parentName=\"li\">{`mechanism`}</strong>{` for any community member to define key issues and suggest `}<strong parentName=\"li\">{`changes`}</strong>{` and `}<strong parentName=\"li\">{`additions`}</strong>{` to the system. `}</li>\n      <li parentName=\"ol\">{`MIPs allow for a high level of `}<strong parentName=\"li\">{`transparency`}</strong>{`, `}<strong parentName=\"li\">{`rigor`}</strong>{`, and `}<strong parentName=\"li\">{`community input`}</strong>{` in order to minimize undesirable results. `}</li>\n      <li parentName=\"ol\">{`In most cases, MIPs are arranged in `}<strong parentName=\"li\">{`sets`}</strong>{` (multiple MIPs that are interdependent but together solve a single problem, risk, or opportunity through one or more processes).`}</li>\n    </ol>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"learn/lifecycle\"\n      }}>{`Click here`}</a>{` to understand the different statuses a MIP goes through in its lifecycle.`}</p>\n    <h3>{`General and Technical MIPs`}</h3>\n    <p>{`There are two distinct kinds of Improvement Proposals - those aimed at better `}<strong parentName=\"p\">{`general`}</strong>{` improvements, and those aimed at `}<strong parentName=\"p\">{`technical`}</strong>{` improvements to our protocol. These changes require slightly different approaches and applications. You can find templates for both kinds in the `}<a parentName=\"p\" {...{\n        \"href\": \"../submit\"\n      }}>{`Submit`}</a>{` section, which details the different kinds of possible submissions and provides the templates you will need.`}</p>\n    <h3>{`Sub-proposals`}</h3>\n    <p>{`MIPs are built up out of lower-level components in order to make them modular, flexible, and easier to understand and update. Some of these components specify `}<strong parentName=\"p\">{`processes`}</strong>{` which occur often enough in the course of governing the proposal that they are worth defining as `}<strong parentName=\"p\">{`sub-proposals`}</strong>{`. For instance, MIP6 defines an end-to-end framework for scalable collateral onboarding. This requires a few inter-related components, one of which - c2 - defines the process for submitting your own collateral application.`}</p>\n    <p>{`We expect that most regular governance work will occur through process sub-proposals, rather than the rarer case of entirely new MIPs, or the even rarer case of new MIP sets.`}</p>\n    <h3>{`Visual Overview`}</h3>\n    <p>{`MIPs are designed to interoperate with our governance cycle, so specific things happen at specific times each month. You can get a sense of the overall flow of work by looking over the diagram below. It's important to understand when to submit your new MIP or Sub-proposal so that you don't end up waiting until the following month for anything to happen.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://raw.githubusercontent.com/andytudhope/maker-flow/master/Life%20and%20Times%20of%20MIPs.png\",\n        \"alt\": \"The Life and Times of an MIP\"\n      }}></img></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport {Children, Fragment} from 'react';\nimport { Box, Flex, jsx } from \"theme-ui\";\nimport Sticky from \"react-sticky-el\";\nimport { useLocation } from \"@reach/router\";\n\nimport { LanguageSelector } from \"@modules/localization\";\nimport { Sidenav, Breadcrumbs } from \"@modules/navigation\";\nimport { StatusBanner } from \"@modules/ui\";\nimport { SEO } from \"@modules/utility\";\n\n\nexport default (props) => {\n  const { children, pageContext, uri } = props;\n  const {\n    title,\n    description,\n    keywords,\n    featuredImage,\n    status,\n    hideLanguageSelector,\n    hideSidenav,\n    hideBreadcrumbs,\n  } = pageContext.frontmatter;\n\n  const statusProps =\n    typeof status === \"object\"\n      ? { children: status.text, ...status }\n      : { children: status };\n\n  const { pathname } = useLocation();\n  const path = pathname.split(\"/\");\n  const currentTopSection = path[2];\n\n  //For the sake of SEO we may want the page title to be based on the first h1 in our MDX file.\n  //if no title is specified in the metadata.\n  const getFirstHeading = () => {\n    //NOTE(Rejon): The children of layouts provided are MDX components!\n    //Find the first mdx child that's an H1\n    const firstHeading = Children.toArray(children).find(\n      (c) => c.props.mdxType === \"h1\"\n    );\n\n    //If we have an h1 in our file return it.\n    if (firstHeading !== undefined) {\n      return firstHeading.props.children;\n    }\n\n    return undefined;\n  };\n\n  //SEO page title priority is: frontmatter title -> First H1 in mdx -> Filename fallback from uri\n  //NOTE(Rejon): If the page is an index of a directory, the uri split will be the name of the directory. ie. /en/bounties -> bounties\n  const _pageTitle = title || getFirstHeading() || uri.split(\"/\").pop();\n\n  const hasTopSection =\n    currentTopSection !== undefined && currentTopSection !== \"\";\n  const renderSidenav = hasTopSection && !hideSidenav;\n\n  const seo = {\n    title: _pageTitle,\n    description,\n    keywords,\n    featuredImage,\n  };\n\n  return (\n    <Fragment>\n      <SEO {...seo} />\n      {renderSidenav && (\n        <Sticky\n          boundaryElement=\".content-boundary\"\n          sx={{\n            width: \"20%\",\n            minWidth: \"260px\",\n            display: [\"none\", \"none\", \"initial\"],\n          }}\n          dontUpdateHolderHeightWhenSticky={true}\n          style={{ position: \"relative\" }}\n          hideOnBoundaryHit={false}\n        >\n          <Sidenav />\n        </Sticky>\n      )}\n\n      <Flex sx={{ flexGrow: 1, flexDirection: \"column\" }}>\n        <article\n          sx={{\n            pl: hasTopSection ? [4, 4, \"64px\"] : 0,\n            mt: hasTopSection ? [4, 4, \"59px\"] : 0,\n            pb: 4,\n            pr: hasTopSection ? 4 : 0,\n          }}\n        >\n          {status && (\n            <Box sx={{ marginTop: hasTopSection ? 2 : 0 }}>\n              <StatusBanner sticky {...statusProps} sx={{ width: \"100%\" }} />\n            </Box>\n          )}\n          {(!hideBreadcrumbs || (hasTopSection && !hideLanguageSelector)) && (\n            <Flex\n              sx={{\n                justifyContent: \"space-between\",\n                position: \"relative\",\n                alignItems: \"flex-start\",\n                flexWrap: [\"wrap\", \"wrap\", \"unset\"],\n                mt: !renderSidenav ? \"2rem\" : \"\",\n                px: !hasTopSection ? [3, 3, 0] : 0,\n              }}\n            >\n              {!hideBreadcrumbs && <Breadcrumbs />}\n              {hasTopSection && !hideLanguageSelector && <LanguageSelector />}\n            </Flex>\n          )}\n          <Box\n            sx={\n              hasTopSection && !hideLanguageSelector\n                ? {\n                    \"& > *:nth-of-type(1)\": {\n                      lineHeight: \"normal\",\n                    },\n                    \"& > *:nth-of-type(1), & > *:nth-of-type(2)\": {\n                      maxWidth: [\"100%\", \"100%\", \"calc(100% - 234px - 1rem)\"],\n                    },\n                    \"& > *:nth-of-type(2)\": { mb: \"32px\" },\n                  }\n                : {}\n            }\n          >\n            {children}\n          </Box>\n        </article>\n      </Flex>\n    </Fragment>\n  );\n};\n"],"sourceRoot":""}